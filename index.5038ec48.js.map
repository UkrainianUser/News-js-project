{"mappings":"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","sources":["src/js/home-page.js","src/js/categories.js","src/js/weather.js","src/js/weatherBase.js"],"sourcesContent":["\nimport { fetchNews } from './fetchNews';\nimport { load, save } from './storage';\nimport { renderCard} from './renderCard';\n\n \nconst NEWS_KEY = \"newsObject\";\nconst FAVORITE_KEY = \"favoriteNews\";\nconst READ_KEY = \"readNews\";\n\nconst cardNews = document.querySelector(\".card-news__list\");\n\nwindow.addEventListener('load', async (event) => {\n  if (!load(NEWS_KEY)) {\n    try {\n      await fetchNews();\n      const parsedNews =  load(NEWS_KEY);\n    renderCard(parsedNews);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  const parsedNews = load(NEWS_KEY);\n  renderCard(parsedNews);\n  })\n\nif (!load(FAVORITE_KEY)) {\n  save(FAVORITE_KEY, []);\n}\nif (!load(READ_KEY)) {\n  save(READ_KEY, []);\n}\n\nconst parsedNews = load(NEWS_KEY);\nrenderCard(parsedNews);\n\ncardNews.addEventListener(\"click\", handleClickFavoriteBtn);\ncardNews.addEventListener(\"click\", handleClickRead);\n\n\nfunction handleClickFavoriteBtn(event) {\n  if (event.target.nodeName !== \"BUTTON\") {\n    return;\n  }\n  const favoritNewsId = event.target.dataset.id;\n\n  const parsedNews = load(NEWS_KEY);\n  const parsedeFavoriteNews = load(FAVORITE_KEY);\n\n  const favoriteNews = parsedNews.find(option => option.id === favoritNewsId);\n  parsedeFavoriteNews.push(favoriteNews);\n  save(FAVORITE_KEY, parsedeFavoriteNews);\n\n  const newsAfterRemove = parsedNews.filter(value => value.id !== favoritNewsId);\n  renderCard(newsAfterRemove);\n  save(NEWS_KEY, newsAfterRemove);\n }\n\nfunction handleClickRead(event) {\n  if (event.target.nodeName !== \"A\") {\n    return;\n  }\n  const readCardUrl = event.target.dataset.url;\n \n  const parsedNews = load(NEWS_KEY);\n  const parsedReadNews = load(READ_KEY);\n  \n  const readNews = parsedNews.find(option => option.url === readCardUrl);\n  parsedReadNews.push(readNews);\n  save(READ_KEY, parsedReadNews);\n }\n \n\n\n\n","import { FetchNews } from './fetchNewsApi';\nimport { fetchNews } from './fetchNews';\n\nconst newsAPI = new FetchNews();\n\nconst categoriesContainer = document.getElementById('categories-container');\nconst menuContainer = document.getElementById('menu-container');\nconst dropbtn = document.querySelector('.dropbtn');\nfetchNewsCategory();\n\nfunction fetchNewsCategory() {\n  return fetch(\n    `https://api.nytimes.com/svc/news/v3/content/section-list.json?api-key=UPfW6vgRuPuGF8dWeumSDLnq86AeLhG1`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      // Создаем кнопки для первых 5 категорий\n      const categories = data.results\n        .slice(0, 5)\n        .map(category => category.section);\n\n      const buttonCategories = Array.from(categoriesContainer.children).map(\n        button => button.getAttribute('name')\n      );\n\n      // Найти категории, которых еще нет в ссылках\n      const newCategories = data.results\n        .filter(category => !buttonCategories.includes(category.section))\n        .map(category => category.section);\n\n      categories.forEach(category => {\n        const link = createLink(category);\n        categoriesContainer.appendChild(link);\n      });\n      createMenu(categories, newCategories);\n      // const menu = createMenu(data.results, newCategories);\n      // menuContainer.appendChild(menu);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n// Функция для создания ссылки\nfunction createLink(category) {\n  const link = document.createElement('a');\n  link.classList.add('categories-container_link');\n  link.textContent = category;\n  link.setAttribute('href', '#');\n  link.setAttribute('name', category);\n\n  const id = `link-${category.toLowerCase().replace(' ', '-')}`;\n  link.setAttribute('id', id);\n\n  link.addEventListener('click', () => {\n    const categoryName = link.getAttribute('name');\n    newsAPI.category = categoryName;\n    newsAPI\n      .fetchByCategory()\n      .then(articles => {\n        articles.map(article => {\n          console.log(article);\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  });\n\n  return link;\n}\n\nfunction createMenu(categories, newCategories) {\n  const dropdown = document.getElementById('myDropdown');\n  dropdown.innerHTML = '';\n\n  const menuCategories = categories.concat(newCategories);\n\n  const existingLinks = Array.from(dropdown.children).map(link =>\n    link.getAttribute('name')\n  );\n\n  const uniqueCategories = menuCategories.filter(\n    category => !existingLinks.includes(category)\n  );\n\n  // Удаляем первые пять категорий из массива uniqueCategories\n  const filteredCategories = uniqueCategories.filter(\n    category => !categories.slice(0, 5).includes(category)\n  );\n\n  filteredCategories.forEach(category => {\n    const link = createLink(category);\n\n    dropdown.appendChild(link);\n  });\n\n  const dropdownLinks = dropdown.querySelectorAll('a');\n  dropdownLinks.forEach(link => {\n    link.classList.add('categories-container_link_dropDown');\n  });\n  filteredCategories.forEach(category => {\n    if (uniqueCategories.includes(category)) {\n      const link = createLink(category);\n    }\n  });\n\n  // установить фиксированную высоту для меню\n  dropdown.style.height = '380px';\n  // добавить скролл\n  dropdown.style.overflowY = 'scroll';\n\n  return dropdown;\n}\n\ndropbtn.addEventListener('click', onDropBtn);\n\n//  Когда пользователь нажимает на кнопку,\n// переключаться между скрытием и отображением выпадающего содержимого\nfunction onDropBtn() {\n  document.getElementById('myDropdown').classList.toggle('show');\n}\n\n// Закрываем раскрывающийся список, если пользователь щелкает за его пределами\nwindow.onclick = function (event) {\n  if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName('dropdown-content');\n    var i;\n    for (i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }\n  }\n};\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather'\nconst KEY_API = '8263fe3022d7c26abc78442437d890b7';\nlet lat = 40.711217;\nlet lon = -74.006889;\n\nfunction success(pos) {\n    const crd = pos.coords;\n    \n    lat = crd.latitude;\n    lon = crd.longitude;\n    localStorage.setItem('latitude', lat);\n    localStorage.setItem('longitude', lon);\n  };\n  \n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n    localStorage.removeItem('latitude', lat); \n    localStorage.removeItem('longitude', lon);\n  };\n  \n  navigator.geolocation.getCurrentPosition(success, error);\n  \n\n   export async function getWeather() {\n    try {\n    if (success) {\n      \n        return await axios.get(BASE_URL, {\n            params: {\n              lat: localStorage.getItem('latitude') || lat,\n              lon: localStorage.getItem('longitude') || lon,\n              appid: KEY_API,\n              units: 'metric',\n            },\n          }); \n    }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n","import weather, { getWeather }  from \"./weather\";\n\nconst weatherForm = document.querySelector('.weather');\n\n async function addWeather() {\n  try {\n    const response = await getWeather();\n    const data = await response.data;\n    const createMarkup = `\n    <div class=\"weather__block\"><span class=\"weather__number\">${Math.round(data.main.temp)}&#176;</span>\n      <div class = \"weather__location\"><h2 class=\"weather__title\">${data.weather[0].main}</h2>\n      <p class=\"weather__city\"><svg class=\"weather__svg\" width=\"16\" height=\"16\">\n      <use href=\"/symbol-defs.33050382.svg#icon-carbon_location-filled\"></use>\n    </svg>${data.name}</p></div></div>\n      <img class=\"weather__icon\" src=\"https://openweathermap.org/img/wn/${data.weather[0].icon}.png\" alt=\"${data.weather[0].description}\">\n      <p class=\"weather__date\">${new Date(data.dt*1000).toDateString()}</p>`\n      \n\n    return weatherForm.insertAdjacentHTML('afterbegin', createMarkup);\n  \n  } catch (error) {\n    console.error(error);\n  }\n }\n\n addWeather();\n\n\n"],"names":["$1GkTE","parcelRequire","$9bfb79a853d4dcfb$var$cardNews","document","querySelector","window","addEventListener","async","event","$5uEKZ","load","fetchNews","parsedNews1","$fDIS9","renderCard","error","console","log","message","parsedNews2","save","$9bfb79a853d4dcfb$var$parsedNews","target","nodeName","favoritNewsId","dataset","id","parsedNews3","parsedeFavoriteNews","favoriteNews","find","option","push","newsAfterRemove","filter","value","readCardUrl","url","parsedNews4","parsedReadNews","readNews","$kd58i","$f3b06000f9b46fbb$var$newsAPI","FetchNews","$f3b06000f9b46fbb$var$categoriesContainer","getElementById","$f3b06000f9b46fbb$var$dropbtn","$f3b06000f9b46fbb$var$createLink","category","link","createElement","classList","add","textContent","setAttribute","toLowerCase","replace","categoryName","getAttribute","fetchByCategory","then","articles","map","article","catch","fetch","response","ok","Error","json","data","categories","results","slice","section","buttonCategories","Array","from","children","button","newCategories","includes","forEach","appendChild","dropdown","innerHTML","menuCategories","concat","existingLinks","uniqueCategories","filteredCategories","querySelectorAll","style","height","overflowY","$f3b06000f9b46fbb$var$createMenu","toggle","onclick","matches","i","dropdowns","getElementsByClassName","length","openDropdown","contains","remove","$2shzp","$83ee39fa453a4c23$var$lat","$83ee39fa453a4c23$var$lon","$83ee39fa453a4c23$var$success","pos","crd","coords","latitude","longitude","localStorage","setItem","$83ee39fa453a4c23$export$ce1081f0c9899666","default","get","params","lat","getItem","lon","appid","units","error1","navigator","geolocation","getCurrentPosition","err","warn","code","removeItem","$ff045e22919394c8$var$weatherForm","createMarkup","Math","round","main","temp","weather","name","icon","description","Date","dt","toDateString","insertAdjacentHTML","$ff045e22919394c8$var$addWeather"],"version":3,"file":"index.5038ec48.js.map"}