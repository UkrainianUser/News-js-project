{"mappings":"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","sources":["src/indexHome.js","src/js/categories.js","src/js/weather.js","src/js/weatherBase.js"],"sourcesContent":["import './js/home-page';\nimport './js/categories';\nimport './js/weather';\nimport './js/weatherBase';\nimport './js/pagination';\nimport './js/filter-date';\n","import { FetchNews } from './fetchNewsApi';\nimport { fetchNews } from './fetchNews';\nimport { renderCard } from './renderCard';\n\nconst newsAPI = new FetchNews();\n\nconst categoriesContainer = document.getElementById('categories-container');\nconst menuContainer = document.getElementById('menu-container');\nconst dropbtn = document.querySelector('.dropbtn');\nfetchNewsCategory();\n\nfunction fetchNewsCategory() {\n  return fetch(\n    `https://api.nytimes.com/svc/news/v3/content/section-list.json?api-key=UPfW6vgRuPuGF8dWeumSDLnq86AeLhG1`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      // Создаем кнопки для первых 5 категорий\n      const categories = data.results\n        .slice(0, 5)\n        .map(category => category.section);\n\n      const buttonCategories = Array.from(categoriesContainer.children).map(\n        button => button.getAttribute('name')\n      );\n\n      // Найти категории, которых еще нет в ссылках\n      const newCategories = data.results\n        .filter(category => !buttonCategories.includes(category.section))\n        .map(category => category.section);\n\n      categories.forEach(category => {\n        const link = createLink(category);\n        categoriesContainer.appendChild(link);\n      });\n      createMenu(categories, newCategories);\n\n      // menuContainer.appendChild(menu);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n// Функция для создания ссылки\nfunction createLink(category) {\n  const link = document.createElement('a');\n  link.classList.add('categories-container_link', 'dropdown-link');\n  link.textContent = category;\n  link.setAttribute('href', '#');\n  link.setAttribute('name', category);\n\n  link.addEventListener('click', () => {\n    const categoryName = link.getAttribute('name');\n    newsAPI.category = categoryName;\n    newsAPI\n      .fetchByCategory()\n      .then(articles => {\n        renderCard(articles);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n    const links = Array.from(categoriesContainer.children);\n    links.forEach(l => {\n      if (l === link) {\n        l.classList.add('activee');\n      } else if (l.classList.contains('activee')) {\n        l.classList.remove('activee');\n      }\n    });\n  });\n\n  return link;\n}\n\nfunction createMenu(categories, newCategories) {\n  const dropdown = document.getElementById('myDropdown');\n  dropdown.innerHTML = '';\n\n  const menuCategories = categories.concat(newCategories);\n\n  const existingLinks = Array.from(dropdown.children).map(link =>\n    link.getAttribute('name')\n  );\n\n  const uniqueCategories = menuCategories.filter(\n    category => !existingLinks.includes(category)\n  );\n\n  // Удаляем первые пять категорий из массива uniqueCategories\n  const filteredCategories = uniqueCategories.filter(\n    category => !categories.slice(0, 5).includes(category)\n  );\n\n  filteredCategories.forEach(category => {\n    const link = createLink(category);\n    dropdown.appendChild(link);\n  });\n\n  const dropdownLinks = dropdown.querySelectorAll('a');\n  dropdownLinks.forEach(link => {\n    link.classList.add('categories-container_link_dropDown');\n    if (categories.includes(link.getAttribute('name'))) {\n      const index = categories.indexOf(link.getAttribute('name'));\n      if (index < 5) {\n        link.classList.add('activee');\n      }\n    }\n  });\n\n  // установить фиксированную высоту для меню\n  dropdown.style.height = '380px';\n  // добавить скролл\n  dropdown.style.overflowY = 'scroll';\n\n  return dropdown;\n}\n\ndropbtn.addEventListener('click', onDropBtn);\n\n//  Когда пользователь нажимает на кнопку,\n// переключаться между скрытием и отображением выпадающего содержимого\nfunction onDropBtn() {\n  document.getElementById('myDropdown').classList.toggle('show');\n}\n\n// Закрываем раскрывающийся список, если пользователь щелкает за его пределами\nwindow.onclick = function (event) {\n  if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName('dropdown-content');\n    var i;\n    for (i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }\n  }\n};\n\nconsole.log('test');\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather'\nconst KEY_API = '8263fe3022d7c26abc78442437d890b7';\nlet lat = 40.711217;\nlet lon = -74.006889;\n\nfunction success(pos) {\n    const crd = pos.coords;\n    \n    lat = crd.latitude;\n    lon = crd.longitude;\n    localStorage.setItem('latitude', lat);\n    localStorage.setItem('longitude', lon);\n  };\n  \n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n    localStorage.removeItem('latitude', lat); \n    localStorage.removeItem('longitude', lon);\n  };\n  \n  navigator.geolocation.getCurrentPosition(success, error);\n  \n\n   export async function getWeather() {\n    try {\n    if (success) {\n      \n        return await axios.get(BASE_URL, {\n            params: {\n              lat: localStorage.getItem('latitude') || lat,\n              lon: localStorage.getItem('longitude') || lon,\n              appid: KEY_API,\n              units: 'metric',\n            },\n          }); \n    }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n","import weather, { getWeather }  from \"./weather\";\n\nconst weatherForm = document.querySelector('.weather');\n\n async function addWeather() {\n  try {\n    const response = await getWeather();\n    const data = await response.data;\n    const createMarkup = `\n    <div class=\"weather__block\"><span class=\"weather__number\">${Math.round(data.main.temp)}&#176;</span>\n      <div class = \"weather__location\"><h2 class=\"weather__title\">${data.weather[0].main}</h2>\n      <p class=\"weather__city\"><svg class=\"weather__svg\" width=\"16\" height=\"16\">\n      <use href=\"/symbol-defs.33050382.svg#icon-carbon_location-filled\"></use>\n    </svg>${data.name}</p></div></div>\n      <img class=\"weather__icon\" src=\"https://openweathermap.org/img/wn/${data.weather[0].icon}.png\" alt=\"${data.weather[0].description}\">\n      <p class=\"weather__date\">${new Date(data.dt*1000).toDateString()}</p>`\n      \n\n    return weatherForm.insertAdjacentHTML('afterbegin', createMarkup);\n  \n  } catch (error) {\n    console.error(error);\n  }\n }\n\n addWeather();\n\n\n"],"names":["parcelRequire","$5dKDZ","$7035cf87bda54340$var$newsAPI","FetchNews","$7035cf87bda54340$var$categoriesContainer","document","getElementById","$7035cf87bda54340$var$dropbtn","querySelector","$7035cf87bda54340$var$createLink","category","link","createElement","classList","add","textContent","setAttribute","addEventListener","categoryName","getAttribute","fetchByCategory","then","articles","$5I0aQ","renderCard","catch","error","console","Array","from","children","forEach","l","contains","remove","fetch","response","ok","Error","json","data","categories","results","slice","map","section","buttonCategories","button","newCategories","filter","includes","appendChild","dropdown","innerHTML","menuCategories","concat","existingLinks","querySelectorAll","indexOf","style","height","overflowY","$7035cf87bda54340$var$createMenu","toggle","window","onclick","event","target","matches","i","dropdowns","getElementsByClassName","length","openDropdown","log","$bpxeT","$b7c37e8f14632f7d$var$BASE_URL","$b7c37e8f14632f7d$var$KEY_API","$b7c37e8f14632f7d$var$lat","$b7c37e8f14632f7d$var$lon","$b7c37e8f14632f7d$var$success","pos","crd","coords","latitude","longitude","localStorage","setItem","$b7c37e8f14632f7d$export$ce1081f0c9899666","$b7c37e8f14632f7d$var$_getWeather","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","$dIxxU","default","get","params","lat","getItem","lon","appid","units","_ctx","t0","navigator","geolocation","getCurrentPosition","err","warn","code","message","removeItem","$656b26f4c9831065$var$weatherForm","$656b26f4c9831065$var$_addWeather","createMarkup","sent","Math","round","main","temp","weather","name","icon","description","Date","dt","toDateString","insertAdjacentHTML","$656b26f4c9831065$var$addWeather"],"version":3,"file":"index.78ce212f.js.map"}